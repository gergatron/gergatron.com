{"version":3,"sources":["webpack:///./src/util/build-og-image-url.js","webpack:///./src/pages/projects.js","webpack:///./node_modules/react-seo-component/dist/react-seo-component.esm.js"],"names":["ogImageUrl","author","website","title","obj","image","Object","entries","map","join","Wrapper","styled","main","theme","spacing","fontSize","lg","borderRadius","colors","gray","boxShadow","outline","sm","fontFamily","mono","fontWeight","bold","primary","rainbowAnimation","linkStyle","linkHover","down","data","useSiteMetadata","description","siteUrl","twitterUsername","authorName","siteLanguage","siteLocale","allPosts","allMdx","nodes","useState","filteredData","query","state","stateSet","posts","titleTemplate","pathname","to","type","aria-label","placeholder","onChange","e","target","value","filter","post","frontmatter","tags","toLowerCase","includes","className","keys","length","id","excerpt","slug","fields","timeToRead","key","Facebook","_ref","url","desc","locale","createElement","property","content","Twitter","_ref$type","username","name","titleSeparator","_ref$article","article","_ref$author","datePublished","dateModified","seo","slice","Date","now","toISOString","copyrightYear","getFullYear","schemaOrgWebPage","headline","inLanguage","mainEntityOfPage","copyrightHolder","creator","publisher","itemListElement","item","position","schemaArticle","logo","push","breadcrumb","Fragment","lang","rel","href","JSON","stringify"],"mappings":"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","file":"component---src-pages-projects-js-2ad8d169641dd0e467ce.js","sourcesContent":["const objectToQueryParams = obj => {\n  const params = Object.entries(obj).map(\n    ([key, value]) => `${key}=${value}`\n  )\n  return '?' + params.join('&')\n}\n\nexport const ogImageUrl = (author, website, title) => {\n  const params = {\n    author,\n    website: website || `gergatron.com`,\n    title,\n    image: `https://gergatron.com/favicon.png`,\n  }\n  return `https://image-og.now.sh/og.jpg${objectToQueryParams(\n    params\n  )}`\n}\n","import { graphql } from 'gatsby'\nimport React, { useState } from 'react'\nimport SEO from 'react-seo-component'\nimport { down } from 'styled-breakpoints'\nimport styled from 'styled-components'\nimport { H1, H2, P } from '../components/page-elements'\nimport {\n  linkHover,\n  linkStyle,\n  PostInfo,\n  rainbowAnimation,\n  StyledLink,\n} from '../components/shared-styles'\nimport { useSiteMetadata } from '../hooks/use-site-metadata'\nimport { ogImageUrl } from '../util/build-og-image-url'\n\nconst Wrapper = styled.main`\n  input {\n    margin-top: ${({ theme }) => theme.spacing[12]};\n    font-size: ${({ theme }) => theme.fontSize.lg};\n    border-radius: ${({ theme }) => theme.borderRadius.lg};\n    border: 1px solid ${({ theme }) => theme.colors.gray[500]};\n    padding: ${({ theme }) => theme.spacing[1]};\n    outline: none;\n    &:focus {\n      box-shadow: ${({ theme }) => theme.boxShadow.outline};\n    }\n  }\n  .posts-number {\n    margin: -${({ theme }) => theme.spacing[6]};\n    font-size: ${({ theme }) => theme.fontSize.sm};\n    font-family: ${({ theme }) => theme.fontFamily.mono};\n    font-weight: ${({ theme }) => theme.fontWeight.bold};\n    color: ${({ theme }) => theme.colors.primary[500]};\n  }\n  small {\n    ${rainbowAnimation}\n  }\n  article {\n    margin: ${({ theme }) => theme.spacing[8]} 0;\n    border-radius: ${({ theme }) => theme.borderRadius.lg};\n    box-shadow: var(--box-shadow-xl);\n    color: var(\n      --colour-on-background,\n      ${({ theme }) => theme.colors.gray[900]}\n    );\n    padding: ${({ theme }) => theme.spacing[4]};\n    h2 {\n      margin-top: 0;\n    }\n    p {\n      margin-top: ${({ theme }) => theme.spacing[2]};\n    }\n    a {\n      &:focus {\n        display: block;\n      }\n      ${linkStyle};\n      ${linkHover};\n      text-decoration: none;\n    }\n    overflow: hidden;\n    &:before {\n      position: relative;\n      display: block;\n      margin: 0 -17px;\n      width: 108%;\n      ${down('sm')} {\n        width: initial;\n      }\n      height: 5px;\n      top: -16px;\n      content: '';\n      background: linear-gradient(\n        0.25turn,\n        var(\n          --title-gradient-from,\n          ${({ theme }) => theme.colors.primary[200]}\n        ),\n        var(\n          --title-gradient-to,\n          ${({ theme }) => theme.colors.primary[500]}\n        )\n      );\n    }\n  }\n`\n\nexport default ({ data }) => {\n  const {\n    title,\n    description,\n    siteUrl,\n    twitterUsername,\n    authorName,\n    siteLanguage,\n    siteLocale,\n  } = useSiteMetadata()\n  // https://www.aboutmonica.com/blog/create-gatsby-blog-search-tutorial\n  const allPosts = data.allMdx.nodes\n\n  const emptyQuery = ''\n\n  const [state, stateSet] = useState({\n    filteredData: [],\n    query: emptyQuery,\n  })\n\n  const handleInputChange = e => {\n    const query = e.target.value\n    const posts = data.allMdx.nodes || []\n\n    const filteredData = posts.filter(post => {\n      const { title, tags } = post.frontmatter\n      return (\n        title.toLowerCase().includes(query.toLowerCase()) ||\n        (tags &&\n          tags.join('').toLowerCase().includes(query.toLowerCase()))\n      )\n    })\n\n    stateSet({ query, filteredData })\n  }\n\n  const { filteredData, query } = state\n  const hasSearchResults = filteredData && query !== emptyQuery\n  const posts = hasSearchResults ? filteredData : allPosts\n\n  return (\n    <>\n      <SEO\n        title={`Projects`}\n        titleTemplate={title}\n        description={description}\n        image={ogImageUrl(\n          authorName,\n          'gergatron.com',\n          `Testing Playground`\n        )}\n        pathname={`${siteUrl}/projects/`}\n        siteLanguage={siteLanguage}\n        siteLocale={siteLocale}\n        twitterUsername={twitterUsername}\n      />\n      <Wrapper>\n        <H1>Testing Playground</H1>\n        <p>\n          <StyledLink to=\"/2020/04/27/a-digital-garden/\">\n            <small>What's this?</small>\n          </StyledLink>\n        </p>\n        <input\n          type=\"text\"\n          aria-label=\"Search\"\n          placeholder=\"Type to filter posts...\"\n          onChange={handleInputChange}\n        />\n        <span className=\"posts-number\">\n          {Object.keys(posts).length}\n        </span>\n        {posts.map(post => {\n          const {\n            id,\n            excerpt,\n            fields: { slug },\n            frontmatter: { title },\n            timeToRead,\n          } = post\n          return (\n            <article key={id}>\n              <StyledLink to={slug}>\n                <H2>{title}</H2>\n                <PostInfo>\n                  <span className=\"postTimeToRead\">\n                    {timeToRead * 2} minutes to read\n                  </span>\n                </PostInfo>\n                <P>{excerpt}</P>\n              </StyledLink>\n            </article>\n          )\n        })}\n      </Wrapper>\n    </>\n  )\n}\n\nexport const query = graphql`\n  query SITE_INDEX_QUERY {\n    allMdx(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { private: { eq: false } } }\n    ) {\n      nodes {\n        id\n        excerpt(pruneLength: 100)\n        frontmatter {\n          title\n        }\n        timeToRead\n        fields {\n          slug\n        }\n      }\n    }\n  }\n`\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\n\nvar Facebook = function Facebook(_ref) {\n  var url = _ref.url,\n      type = _ref.type,\n      title = _ref.title,\n      desc = _ref.desc,\n      image = _ref.image,\n      locale = _ref.locale;\n  return React.createElement(Helmet, null, React.createElement(\"meta\", {\n    property: \"og:locale\",\n    content: locale\n  }), React.createElement(\"meta\", {\n    property: \"og:url\",\n    content: url\n  }), React.createElement(\"meta\", {\n    property: \"og:type\",\n    content: type\n  }), React.createElement(\"meta\", {\n    property: \"og:title\",\n    content: title\n  }), React.createElement(\"meta\", {\n    property: \"og:description\",\n    content: desc\n  }), React.createElement(\"meta\", {\n    property: \"og:image\",\n    content: image\n  }), React.createElement(\"meta\", {\n    property: \"og:image:alt\",\n    content: desc\n  }));\n};\n\nvar Twitter = function Twitter(_ref) {\n  var _ref$type = _ref.type,\n      type = _ref$type === void 0 ? 'summary_large_image' : _ref$type,\n      username = _ref.username,\n      title = _ref.title,\n      desc = _ref.desc,\n      image = _ref.image;\n  return React.createElement(Helmet, null, username && React.createElement(\"meta\", {\n    name: \"twitter:creator\",\n    content: username\n  }), React.createElement(\"meta\", {\n    name: \"twitter:card\",\n    content: type\n  }), React.createElement(\"meta\", {\n    name: \"twitter:title\",\n    content: title\n  }), React.createElement(\"meta\", {\n    name: \"twitter:description\",\n    content: desc\n  }), React.createElement(\"meta\", {\n    name: \"twitter:image\",\n    content: image\n  }), React.createElement(\"meta\", {\n    name: \"twitter:image:alt\",\n    content: desc\n  }));\n};\n\nvar SEO = function SEO(_ref) {\n  var title = _ref.title,\n      titleTemplate = _ref.titleTemplate,\n      titleSeparator = _ref.titleSeparator,\n      description = _ref.description,\n      pathname = _ref.pathname,\n      _ref$article = _ref.article,\n      article = _ref$article === void 0 ? false : _ref$article,\n      image = _ref.image,\n      siteLanguage = _ref.siteLanguage,\n      siteLocale = _ref.siteLocale,\n      twitterUsername = _ref.twitterUsername,\n      _ref$author = _ref.author,\n      author = _ref$author === void 0 ? 'J Doe.' : _ref$author,\n      datePublished = _ref.datePublished,\n      dateModified = _ref.dateModified;\n  var seo = {\n    title: title.slice(0, 70),\n    description: description.slice(0, 160),\n    datePublished: datePublished ? null : new Date(Date.now()).toISOString(),\n    dateModified: dateModified ? null : new Date(Date.now()).toISOString()\n  };\n  var copyrightYear = new Date().getFullYear(); // schema.org in JSONLD format\n  // https://developers.google.com/search/docs/guides/intro-structured-data\n  // You can fill out the 'author', 'creator' with more data or another type (e.g. 'Organization')\n  // Structured Data Testing Tool >>\n  // https://search.google.com/structured-data/testing-tool\n\n  var schemaOrgWebPage = {\n    '@context': 'http://schema.org',\n    '@type': 'WebPage',\n    url: pathname,\n    headline: seo.description,\n    inLanguage: siteLanguage,\n    mainEntityOfPage: pathname,\n    description: seo.description,\n    name: seo.title,\n    author: {\n      '@type': 'Person',\n      name: author\n    },\n    copyrightHolder: {\n      '@type': 'Person',\n      name: author\n    },\n    copyrightYear: copyrightYear,\n    creator: {\n      '@type': 'Person',\n      name: author\n    },\n    publisher: {\n      '@type': 'Person',\n      name: author\n    },\n    datePublished: seo.datePublished,\n    dateModified: seo.dateModified,\n    image: {\n      '@type': 'ImageObject',\n      url: \"\" + image\n    }\n  }; // Initial breadcrumb list\n\n  var itemListElement = [{\n    '@type': 'ListItem',\n    item: {\n      '@id': pathname,\n      name: 'Homepage'\n    },\n    position: 1\n  }];\n  var schemaArticle = null;\n\n  if (article) {\n    schemaArticle = {\n      '@context': 'http://schema.org',\n      '@type': 'Article',\n      author: {\n        '@type': 'Person',\n        name: author\n      },\n      copyrightHolder: {\n        '@type': 'Person',\n        name: author\n      },\n      copyrightYear: copyrightYear,\n      creator: {\n        '@type': 'Person',\n        name: author\n      },\n      publisher: {\n        '@type': 'Organization',\n        name: author,\n        logo: {\n          '@type': 'ImageObject',\n          url: \"\" + image\n        }\n      },\n      datePublished: seo.datePublished,\n      dateModified: seo.dateModified,\n      description: seo.description,\n      headline: seo.title,\n      inLanguage: siteLanguage,\n      url: pathname,\n      name: seo.title,\n      image: {\n        '@type': 'ImageObject',\n        url: image\n      },\n      mainEntityOfPage: pathname\n    }; // Push current blog post into breadcrumb list\n\n    itemListElement.push({\n      '@type': 'ListItem',\n      item: {\n        '@id': pathname,\n        name: seo.title\n      },\n      position: 2\n    });\n  }\n\n  var breadcrumb = {\n    '@context': 'http://schema.org',\n    '@type': 'BreadcrumbList',\n    description: 'Breadcrumbs list',\n    name: 'Breadcrumbs',\n    itemListElement: itemListElement\n  };\n  return React.createElement(React.Fragment, null, React.createElement(Helmet, {\n    title: seo.title,\n    titleTemplate: \"%s \" + (titleSeparator ? titleSeparator : \"\\xB7\") + \" \" + titleTemplate\n  }, React.createElement(\"html\", {\n    lang: siteLanguage ? siteLanguage : 'en'\n  }), React.createElement(\"link\", {\n    rel: \"canonical\",\n    href: pathname\n  }), React.createElement(\"meta\", {\n    name: \"description\",\n    content: seo.description\n  }), !article && React.createElement(\"script\", {\n    type: \"application/ld+json\"\n  }, JSON.stringify(schemaOrgWebPage)), article && React.createElement(\"script\", {\n    type: \"application/ld+json\"\n  }, JSON.stringify(schemaArticle)), React.createElement(\"script\", {\n    type: \"application/ld+json\"\n  }, JSON.stringify(breadcrumb))), image && React.createElement(React.Fragment, null, React.createElement(Facebook, {\n    desc: seo.description,\n    image: image,\n    title: seo.title,\n    type: article ? 'article' : 'website',\n    url: pathname,\n    locale: siteLocale ? siteLocale : 'en_gb'\n  }), React.createElement(Twitter, {\n    title: seo.title,\n    image: image,\n    desc: seo.description,\n    username: twitterUsername\n  })));\n};\n\nexport default SEO;\nexport { Facebook, Twitter };"],"sourceRoot":""}