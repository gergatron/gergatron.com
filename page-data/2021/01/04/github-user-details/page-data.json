{"componentChunkName":"component---src-templates-post-js","path":"/2021/01/04/github-user-details/","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"date\": \"2021-01-04T00:00:00.000Z\",\n  \"title\": \"REST vs GraphQL FIGHT!\",\n  \"tags\": [\"api\", \"graphql\", \"vercel\"],\n  \"private\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"I started playing around with the GitHub GraphQL API endpoint to do\\nsomething I\\u2019ve been meaning to do for a wile now, that\\u2019s make a\\nserverless function that will return the GitHub stats from my GitHub\\nprofile.\"), mdx(\"p\", null, \"I was discussing it with my friend Paul Scanlon and he decided to do\\nsomething similar with the GitHub REST API, so where we are making\\nnotes on how things are going!!\"), mdx(\"p\", null, \"What I\\u2019m doing is based off of several Leigh Halliday videos on using\\nthe GitHub GraphQL API and adding that data to a graph, I extended\\nthat and added a calendar/heatmap of all my GitHu contributions too.\"), mdx(\"p\", null, \"I wanted to use Playwright but that didn\\u2019t work on Vercel so a\\nreverted to Puppeteer like with the serverless open graph image\\nproject I made a while back now.\"), mdx(\"p\", null, \"I went with Google chart library first as it had what I needed\\n(Pie/Doughnut and Heatmap) but it\\u2019s not responsive.\"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{},"timeToRead":1,"excerpt":"I started playing around with the GitHub GraphQL API endpoint to do\nsomething I've been meaning to do for a wile now, that's make aâ€¦","frontmatter":{"title":"REST vs GraphQL FIGHT!","date":"2021 January 4th","private":true,"tags":["api","graphql","vercel"]},"fields":{"slug":"/2021/01/04/github-user-details/","editLink":"https://github.com/gergatron/gergatron.com/edit/authoring/content/posts/2021/01/04/github-user-details/index.mdx"}}},"pageContext":{"slug":"/2021/01/04/github-user-details/"}},"staticQueryHashes":["2382116070","2382116070"]}